server.port=29040
# 服务名称
spring.application.name=newbee-mall-cloud-order-service
# Nacos地址
spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848
# Nacos登录用户名(默认为nacos，生产环境一定要修改)
spring.cloud.nacos.username=nacos
# Nacos登录密码(默认为nacos，生产环境一定要修改)
spring.cloud.nacos.password=nacos

spring.main.allow-circular-references=true

# datasource config (MySQL)
spring.datasource.name=newbee-mall-cloud-order-datasource
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/newbee_mall_cloud_order_db?useUnicode=true&serverTimezone=Asia/Shanghai&characterEncoding=utf8&autoReconnect=true&useSSL=false&allowMultiQueries=true
spring.datasource.username=root
spring.datasource.password=0121
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=15
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.idle-timeout=60000
spring.datasource.hikari.pool-name=hikariCP
spring.datasource.hikari.max-lifetime=600000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.connection-test-query=SELECT 1

# mybatis config
mybatis.mapper-locations=classpath:mapper/*Mapper.xml

# openfeign config
feign.client.config.default.connectTimeout=2000
feign.client.config.default.readTimeout=5000
feign.compression.request.enabled=true
feign.compression.request.mime-types=text/xml,application/xml,application/json
feign.compression.request.min-request-size=1024
feign.compression.response.enabled=true 

#seata config

seata.enabled=true
#三个不同的服务命名为不同的名称，比如goods-server、order-server、shopcart-server
seata.application-id=order-server
#事务分组配置
seata.tx-service-group=test_save_order_group
service.vgroupMapping.test_save_order_group=default

#连接Nacos服务中心的配置信息
seata.registry.type=nacos
seata.registry.nacos.application=seata-server
seata.registry.nacos.server-addr=127.0.0.1:8848
seata.registry.nacos.username=nacos
seata.registry.nacos.password=nacos
seata.registry.nacos.group=DEFAULT_GROUP
seata.registry.nacos.cluster=default

# 默认为8719，作用：启动一个HTTP客户端服务，该服务将于Sentinel控制台进行数据交互。如果该端口被占用，则从8719依次+1扫描
spring.cloud.sentinel.transport.port=8719
# 指定Sentinel控制台地址
spring.cloud.sentinel.transport.dashboard=127.0.0.1:9113
#spring.cloud.sentinel.web-context-unify=false
